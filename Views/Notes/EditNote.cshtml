@model ChiengPlannerVue.Models.Notes.NotesModel;
@using ChiengPlannerVue.Utils
@{
    ViewData["Title"] = "Edit Note";
    var deletedNote = ViewData["DeletedNote"] == null ? false : true;
}

<div id="errorModal" class="modal" data-backdrop="false" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content bg-danger">
            <div class="modal-body text-white">
                <p id="errorMsg" class="d-inline"></p>
                <button type="button" id="errorClose" class="close" aria-label="Close" style="color: white;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

        </div>
    </div>
</div>

<div id="warningModal" class="modal" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content bg-warning">
            <div class="modal-body text-white">
                <p id="warningMsg" class="d-inline"></p>
            </div>
            <div class="modal-footer" style="border-top: 0px;margin-top: -25px;">
                <button type="button" id="continueAction" class="btn btn-danger">Ok</button>
                <button type="button" id="cancelAction" class="btn btn-success">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="deleteWarningModal" class="modal" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content bg-danger">
            <div class="modal-body text-white">
                <p class="d-inline"><b><small>Are you sure you want to delete this note? You won't be able to recover it.</small></b></p>
            </div>
            <div class="modal-footer" style="border-top: 0px;margin-top: -25px;">
                <button type="button" id="continueDelete" class="btn btn-danger">Ok</button>
                <button type="button" id="cancelDelete" class="btn btn-success">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="deletedNoteSuccessModal" class="modal" data-backdrop="false" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content bg-success">
            <div class="modal-body text-white">
                <p class="d-inline">Note was succesfully deleted.</p>
                <button type="button" id="deletedNoteClose" class="close" aria-label="Close" style="color: white;">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

        </div>
    </div>
</div>

<style>

    .modal {
        opacity: 0;
    }


        .modal.in {
            opacity: 1;
        }

</style>
@section Scripts {
    <script type="text/javascript">
        var vm = @Html.Raw(@Model.ToJson());
        var notesId = vm.notesId;
        var selectedNote = null;
        var deleteNoteId = 0;
        var noteDeleted = @deletedNote.ToJson();
        var unsavedRedirect = "";
        $(document).ready(function () {
            $('#deletedNoteSuccessModal').on('shown.bs.modal', function (e) {
                setTimeout(function () {
                    $('#deletedNoteSuccessModal').css({ 'transition': '' })
                    $('#deletedNoteSuccessModal').fadeOut('slow');
                    setTimeout(function () {
                        $("#deletedNoteSuccessModal").modal('hide');
                    }, 500);
                }, 5000);
            });
            if (noteDeleted) {
                $("#deletedNoteSuccessModal").css({ 'transition': 'opacity 3s' });
                $('#deletedNoteSuccessModal').modal('show');
            }
            $('#deletedNoteClose').on('click', function () {
                $('#deletedNoteSuccessModal').css({ 'transition': '' })
                $('#deletedNoteSuccessModal').fadeOut('slow');
                setTimeout(function () {
                    $("#deletedNoteSuccessModal").modal('hide');
                }, 500);
            });

            if (notesId != 0) {
                // selectedNote = $('.notes-list').children().first();
                loadNote(selectedNote, notesId);
                $('#deleteNoteBtn').show();
            }

            $("#saveNote").click(function () {
                var formData = {
                    Title: $('#noteTitle').val(),
                    Body: $('.tiptap').html(),
                    UserId: 1,
                    NotesId: notesId,
                    PlainText: $('.tiptap').text()
                }
                $.ajax({
                    type: "POST",
                    url: "/notes/savenote",
                    data: formData,
                    success: function (data) {
                        if (data.success) {
                            window.location.href = "/Notes/Index?Id=" + data.id;
                        }
                        else {
                            $("#errorModal").css({ 'transition': 'opacity 3s' });
                            $('#errorMsg').html(data.message);
                            $('#errorModal').modal('show');
                        }

                    },
                    error: function () {
                        $("#errorModal").css({ 'transition': 'opacity 3s' });
                        $('#errorMsg').html('<b><small>There was an error saving your note, please try again</small></b>');
                        $('#errorModal').modal('show');
                    }
                })
            });

            $("#imageInput").on("change", function () {
                var width = $('#imageWidth').val();
                var height = $('#imageHeight').val();
                var formData = new FormData();
                if (this.files && this.files[0]) {
                    formData.append("file", this.files[0]);
                }
                formData.append("width", width);
                formData.append("height", height);
                $.ajax({
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    cache: false,
                    url: '/Notes/SaveImage',
                    success: function (data) {
                        if (data.success == true && data.url != "") {
                            $("#imageUrl").attr("value", data.url);
                            $("#addImageBtn").trigger("click");
                        }
                        else {
                            $("#errorModal").css({ 'transition': 'opacity 3s' });
                            $('#errorMsg').html('<b>Failed to upload image, please try again</b>');
                            $('#errorModal').modal('show');
                        }
                    },
                    error: function () {
                        toastr.error('Failed to upload image, please try again')
                    },
                });
                $("#imageInput").val('');
            });

            $("#videoInput").on("change", function () {
                var formData = new FormData();
                if (this.files && this.files[0]) {
                    formData.append("file", this.files[0]);
                }
                $.ajax({
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    cache: false,
                    url: '/Notes/SaveVideo',
                    success: function (data) {
                        if (data.success == true && data.url != "") {
                            $("#videoUrl").attr("value", data.url);
                            $("#addVideoBtn").trigger("click");
                        }
                        else {
                            $("#errorModal").css({ 'transition': 'opacity 3s' });
                            $('#errorMsg').html('<b>Failed to upload video, please try again</b>');
                            $('#errorModal').modal('show');
                        }
                    },
                    error: function () {
                    },
                });
            });

            $("#imgButton").on("click", function () {
                $("#imageInput").trigger("click");
            });

            $("#videoButton").on("click", function () {
                $("#videoInput").trigger("click");
            });

            $('#resizable').resizable();

            $(window).scroll(function (e) {
                var $el = $('#toolbarMenu');
                var isPositionFixed = ($el.css('position') == 'fixed');
                if ($(this).scrollTop() > 200 && !isPositionFixed) {
                    $el.css({ 'position': 'fixed', 'top': '0px', 'width': '75%' });
                }
                if ($(this).scrollTop() < 150 && isPositionFixed) {
                    $el.css({ 'position': 'static', 'top': '0px', 'width': '100%' });
                }
            });

            $('#errorClose').on('click', function () {
                $('#errorModal').css({ 'transition': '' })
                $('#errorModal').fadeOut('slow');
                setTimeout(function () {
                    $("#errorModal").modal('hide');
                }, 500);
            });

            $('#errorModal').on('shown.bs.modal', function (e) {
                setTimeout(function () {
                    $('#errorModal').css({ 'transition': '' })
                    $('#errorModal').fadeOut('slow');
                    setTimeout(function () {
                        $("#errorModal").modal('hide');
                    }, 500);
                }, 5000);
            });

            // $('.notes-list-item').on('click', function (e) {
            //     notesId = $(this).data("id");
            //     selectedNote = $(this);
            //     if (($('.tiptap').html() != "Type here..." || $('.tiptap').html() != "") && $('#noteTitle').val() == "") {
            //         loadNote(selectedNote, notesId);
            //     }
            //     else {
            //         openWarningModal("<b><small>Are you sure you want to open this note? You will lose all your unsaved work.</small></b>", "load")
            //     }
            // });

            $('#homeNavLink').on('click', function (e) {
                e.preventDefault();
                unsavedRedirect = $(this).attr('href');
                if (!hasNoteBeenModified()) {
                    window.location.href = unsavedRedirect;
                }
                else {
                    openWarningModal("<b><small>Are you sure you want to leave this page? You will lose all your unsaved work.</small></b>", "home")
                }
            });

            $('#notesNavLink').on('click', function (e) {
                e.preventDefault();
                unsavedRedirect = $(this).attr('href');
                if (!hasNoteBeenModified()) {
                    window.location.href = unsavedRedirect;
                }
                else {
                    openWarningModal("<b><small>Are you sure you want to leave this page? You will lose all your unsaved work.</small></b>", "notes")
                }
            });

            function hasNoteBeenModified(){
                if (($('.tiptap').html() == "<p>Type here...</p>" || $('.tiptap').html() == "") && $('#noteTitle').val() == "") {
                    return false;
                }
                else if (($('.tiptap').html() == vm.body) && $('#noteTitle').val() == vm.title){
                    return false;
                }
                return true;
            }

            // $('.notes-add').on('click', function (e) {
            //     e.preventDefault();
            //     unsavedRedirect = $(this).href;
            //     if (($('.tiptap').html() != "Type here..." || $('.tiptap').html() != "") && $('#noteTitle').val() == "") {
            //         window.location.href(unsavedRedirect);
            //     }
            //     else {
            //         openWarningModal("<b><small>Are you sure you want to start a new note? You will lose all your unsaved work.</small></b>", "add")
            //     }
            // });

            $('#continueAction').on('click', function () {
                $('#warningModal').modal('hide');
                if ($(this).data("val") == "edit") {
                    loadNote(selectedNote, notesId);
                }
                else if ($(this).data("val") == "home") {
                    window.location.href = unsavedRedirect;
                }
                else if ($(this).data("val") == "notes") {
                    window.location.href = unsavedRedirect;
                }
                // else if ($(this).data("val") == "add") {
                //     window.location.href = unsavedRedirect;
                // }
            })

            $('#cancelAction').on('click', function () {
                $('#warningModal').modal('hide');
            })

            $('#deleteNoteBtn').on('click', function () {
                deleteNoteId = notesId
                $('#deleteWarningModal').modal('show');
            })

            // $('#deleteNoteSidebar').on('click', function () {
            //     deleteNoteId = $(this).data("id");
            //     $('#deleteWarningModal').modal('show');
            // })

            $('#continueDelete').on('click', function () {
                deleteNote(deleteNoteId)
            })

            $('#cancelDelete').on('click', function () {
                $('#deleteWarningModal').modal('hide');
            })

            function openWarningModal(warning, val) {
                $('#warningMsg').html(warning);
                $('#warningModal').modal('show');
                $('#continueAction').data("val", val);
            }

            function loadNote(element, noteId) {
                $.ajax({
                    type: "POST",
                    url: "/notes/loadnote",
                    data: { id: noteId },
                    success: function (data) {
                        if (data.success) {
                            $('#noteTitle').val(data.title);
                            $('.tiptap').html(data.body);
                            if(element != null){
                                $('.notes-list-item--selected').removeClass('notes-list-item--selected')
                                element.addClass('notes-list-item--selected')
                            }
                            if ($('#deleteNoteBtn').is(":hidden")) {
                                $('#deleteNoteBtn').show();
                            }
                        }
                        else {
                            $("#errorModal").css({ 'transition': 'opacity 3s' });
                            $('#errorMsg').html(data.message);
                            $('#errorModal').modal('show');
                        }

                    },
                    error: function () {
                        $("#errorModal").css({ 'transition': 'opacity 3s' });
                        $('#errorMsg').html('<b><small>There was an error loading this note, please try again</small></b>');
                        $('#errorModal').modal('show');
                    }
                })
            }

            function deleteNote(noteId) {
                $('#deleteWarningModal').modal('hide');
                $.ajax({
                    type: "POST",
                    url: "/notes/deletenote",
                    data: { id: noteId },
                    success: function (data) {
                        if (data.success) {
                            window.location.href = "/Notes/Index";
                        }
                        else {
                            $("#errorModal").css({ 'transition': 'opacity 3s' });
                            $('#errorMsg').html(data.message);
                            $('#errorModal').modal('show');
                        }

                    },
                    error: function () {
                        $("#errorModal").css({ 'transition': 'opacity 3s' });
                        $('#errorMsg').html('<b><small>There was an error deleting your note, please try again</small></b>');
                        $('#errorModal').modal('show');
                    }
                })
            }
        });
    </script>
    <script type="text/javascript" src="~/js/notes-edit.bundle.js" asp-append-version="true"></script>
}